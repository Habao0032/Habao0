import javafx.animation.*;
import javafx.application.Application;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.scene.text.Font;
import javafx.stage.Stage;
import javafx.util.Duration;

import java.util.Random;

public class NewYearApp extends Application {

    private boolean answered = false;

    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage stage) {
        // Create main layout
        VBox root = new VBox(20);
        root.setAlignment(Pos.CENTER);
        root.setStyle("-fx-background-color: linear-gradient(to bottom, #ffefd5, #ffe4e1); -fx-padding: 20;");

        // Title
        Label title = new Label("Chúc Mừng Năm Mới 2025! 🌟");
        title.setFont(new Font("Arial", 36));
        title.setTextFill(Color.ORANGE);
        root.getChildren().add(title);

        // Intro
        Label intro = new Label("Chúc bạn và gia đình năm mới an khang, thịnh vượng, vạn sự như ý! 🌸");
        intro.setFont(new Font("Arial", 18));
        intro.setTextFill(Color.DARKRED);
        root.getChildren().add(intro);

        // Game question
        Label question = new Label("Sắp xếp các từ sau thành một câu có nghĩa: \"Truyền, Bông, Than\"");
        question.setFont(new Font("Arial", 20));
        root.getChildren().add(question);

        // Input field
        TextField answerField = new TextField();
        answerField.setPromptText("Nhập câu trả lời của bạn...");
        answerField.setMaxWidth(300);
        root.getChildren().add(answerField);

        // Submit button
        Button submitButton = new Button("Trả Lời");
        submitButton.setStyle("-fx-background-color: #ff6347; -fx-text-fill: white; -fx-font-size: 16px; -fx-padding: 10px;");
        root.getChildren().add(submitButton);

        // Result label
        Label resultLabel = new Label();
        resultLabel.setFont(new Font("Arial", 20));
        root.getChildren().add(resultLabel);

        // Handle button click
        submitButton.setOnAction(e -> {
            if (answered) return;

            String answer = answerField.getText().trim();
            if (answer.equalsIgnoreCase("Bông Truyền Than")) {
                Random random = new Random();
                int luckyMoney = (random.nextInt(10) + 1) * 1000; // Random từ 1k - 10k
                resultLabel.setText("🎉 Bạn trả lời đúng! Bạn nhận được lì xì: " + luckyMoney + " đ");
                resultLabel.setTextFill(Color.GREEN);
            } else {
                resultLabel.setText("❌ Sai rồi! Hãy thử lại!");
                resultLabel.setTextFill(Color.RED);
            }

            answered = true;
            submitButton.setDisable(true);
        });

        // Add falling petals
        Pane petalPane = new Pane();
        petalPane.setPrefSize(800, 600);
        root.getChildren().add(petalPane);
        Timeline petalAnimation = new Timeline(new KeyFrame(Duration.millis(300), e -> createPetal(petalPane)));
        petalAnimation.setCycleCount(Animation.INDEFINITE);
        petalAnimation.play();

        // Set scene and stage
        Scene scene = new Scene(root, 800, 600);
        stage.setScene(scene);
        stage.setTitle("Chúc Mừng Năm Mới 2025");
        stage.show();
    }

    private void createPetal(Pane pane) {
        Random random = new Random();
        Circle petal = new Circle(10, Color.PINK);
        petal.setTranslateX(random.nextDouble() * pane.getWidth());
        pane.getChildren().add(petal);

        TranslateTransition fall = new TranslateTransition(Duration.seconds(5), petal);
        fall.setFromY(-20);
        fall.setToY(pane.getHeight() + 20);
        fall.setOnFinished(e -> pane.getChildren().remove(petal));

        RotateTransition sway = new RotateTransition(Duration.seconds(2), petal);
        sway.setFromAngle(-15);
        sway.setToAngle(15);
        sway.setCycleCount(Animation.INDEFINITE);
        sway.setAutoReverse(true);

        ParallelTransition animation = new ParallelTransition(fall, sway);
        animation.play();
    }
}
